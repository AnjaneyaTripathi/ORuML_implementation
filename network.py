import pandas as pddata = pd.read_csv('dataset.csv')nodes = data.iloc[0:10, :]def get_class(nodes, node):    if(nodes['class'][node] == 'CLASS 1'):        return 1    elif(nodes['class'][node] == 'CLASS 2'):        return 2    elif(nodes['class'][node] == 'CLASS 3'):        return 3    else:        return 4    def calculate_feasability(path, nodes):    total_class = 0    for i in path:        total_class = total_class + get_class(nodes, i)    return total_class / len(path)    def calculate_optimum_path(paths, nodes):    minimal_cost = 1000    cnt = 0    for i in paths:        cnt = cnt + 1        cost = calculate_feasability(i, nodes)        print('Path %d has a cost of %f' %(cnt, cost))        if(cost < minimal_cost):            minimal_cost = cost            path = cnt    return minimal_cost, pathpaths = [[0, 1, 8, 2],         [0, 4, 6, 2],         [0, 5, 7, 3, 2],         [0, 5, 3, 2],         [0, 9, 3, 2]]print('Considering the following 10 nodes to be part of our network: ')print(nodes)print('\n')print('We assume themn to be connected as given below: ')print('1 -> 2 -> 9 -> 3')print('1 -> 5 -> 7 -> 3')print('1 -> 6 -> 8 -> 4 -> 3')print('1 -> 6 -> 4 -> 3')print('1 -> 10 -> 4 -> 3')print('\n')minimal_cost, path = calculate_optimum_path(paths, nodes)print('\n')print('The optimal path is %d with a cost of %f' %(minimal_cost, path))                        